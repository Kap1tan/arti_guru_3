import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram.enums import ParseMode
from aiogram.client.bot import DefaultBotProperties

logging.basicConfig(level=logging.INFO)

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = "7712066245:AAHHkKuTRWW9VFk3wl6gxkBOWi679wfBg5c"
# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
ADMIN_ID = 7667816800

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –ú–∞–ø–ø–∏–Ω–≥ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –æ—Ç–≤–µ—Ç–æ–≤ –≤ —á–∏—Ç–∞–µ–º—ã–µ —Å—Ç—Ä–æ–∫–∏
ANSWER_TEXTS = {
    'q1': {
         'q1_yes': "–î–∞",
         'q1_no': "–ù–µ—Ç"
    },
    'q2': {
         'q2_1': "–¥–æ 1 —á–∞—Å–∞ –≤ –¥–µ–Ω—å",
         'q2_3_5': "–¥–æ 3-5 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å",
         'q2_6_10': "–¥–æ 6-10 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å"
    },
    'q3': {
         'q3_option1': "–æ—Ç 250–∫ –¥–æ 350.000–∫–†",
         'q3_option2': "–æ—Ç 500.000‚ÇΩ",
         'q3_option3': "–æ—Ç 1.000.000‚ÇΩ"
    },
    'q4': {
         'q4_option1': "500.000‚ÇΩ",
         'q4_option2': "3.000.000‚ÇΩ",
         'q4_option3': "1.000.000‚ÇΩ"
    }
}

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∫–≤–∏–∑–∞
class Quiz(StatesGroup):
    q1 = State()  # –í—ã–±–æ—Ä "–î–∞" / "–ù–µ—Ç"
    q2 = State()  # –í—ã–±–æ—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (—á–∞—Å—ã –≤ –¥–µ–Ω—å)
    q3 = State()  # –í—ã–±–æ—Ä –±—é–¥–∂–µ—Ç–∞ (–ø–µ—Ä–≤—ã–π –±–ª–æ–∫)
    q4 = State()  # –í—ã–±–æ—Ä –±—é–¥–∂–µ—Ç–∞ (–≤—Ç–æ—Ä–æ–π –±–ª–æ–∫)
    waiting_for_final = State()  # –æ–∂–∏–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start_handler(message: types.Message, state: FSMContext):
    photo_path = "1.jpg"  # –ø—É—Ç—å –∫ –ø–µ—Ä–≤–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ
    text = """<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!</b> üñê

–¢—ã –ø–æ–ø–∞–ª –≤ —Å–∞–º—ã–π –º–æ—â–Ω—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –Ω–∞ —Ä—ã–Ω–∫–µ Telegram

–õ–∏—á–Ω–æ —è –±–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–∏–º –∑–Ω–∞–Ω–∏—è–º –∑–∞–ª–∏–ª –±–æ–ª—å—à–µ 20 –º–∏–ª–ª–∏–æ–Ω–æ–≤ —Ä—É–±–ª–µ–π —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞

‚û°Ô∏è <b>–°–µ–π—á–∞—Å —Ä–∞—Å—Å–∫–∞–∂—É</b>, –∫–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ç–µ–ª–µ–≥–µ 150–∫+ —Å –Ω—É–ª—è –∑–∞ –º–µ—Å—è—Ü –∏ —É–∑–Ω–∞—Ç—å, –∫–∞–∫ —Ç–µ–±–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å—Å—è –µ—â—ë –±–æ–ª—å—à–µ

–ü–æ—ç—Ç–æ–º—É, –¥–∞–≤–∞–π –¥–æ–≥–æ–≤–æ—Ä–∏–º—Å—è:

–¢—ã —Ç—â–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∞–µ—à—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ—Ç–Ω–æ—Å–∏—à—å—Å—è –∫ –Ω–µ–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å–µ—Ä—å—ë–∑–Ω–æ

–ù–æ –ø–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ —Ç—ã –ø–æ–ª—É—á–∏—à—å –º–∞—Ç–µ—Ä–∏–∞–ª, —Ç—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª—è—Ç —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∑–Ω–∞–Ω–∏–π –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ "–ó–∞–∫—É–ø—â–∏–∫ —Ä–µ–∫–ª–∞–º—ã"

<b>–ò–∑—É—á–∞–π, —è —É–≤–µ—Ä–µ–Ω, —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è</b> üôå"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–≥–Ω–∞–ª–∏!", callback_data="start_quiz")]
    ])
    photo = FSInputFile(photo_path)
    await bot.send_photo(chat_id=message.chat.id,
                         photo=photo,
                         caption=text,
                         parse_mode=ParseMode.HTML,
                         reply_markup=keyboard)
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–≥–Ω–∞–ª–∏!"
@dp.callback_query(F.data == "start_quiz")
async def process_start_quiz(callback: types.CallbackQuery, state: FSMContext):
    photo_path = "2.jpg"  # –ø—É—Ç—å –∫–æ –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ
    text = """üó£: <b>–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–∫—É–ø—â–∏–∫–æ–º, –º–Ω–µ –Ω—É–∂–µ–Ω —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª, —É –º–µ–Ω—è –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞—á–∞—Ç—å...

–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ú–∏—Ñ?</b>

–ö–∞–∫ —Ç—ã –¥—É–º–∞–µ—à—å, –Ω—É–∂–µ–Ω –ª–∏ –∫–∞–ø–∏—Ç–∞–ª –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–∫—É–ø—â–∏–∫–æ–º –≤ Telegram?"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="–î–∞", callback_data="q1_yes"),
            InlineKeyboardButton(text="–ù–µ—Ç", callback_data="q1_no")
        ]
    ])
    photo = FSInputFile(photo_path)
    await bot.send_photo(chat_id=callback.message.chat.id,
                         photo=photo,
                         caption=text,
                         parse_mode=ParseMode.HTML,
                         reply_markup=keyboard)
    await callback.answer()
    await state.set_state(Quiz.q1)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å 1 ("–î–∞" –∏–ª–∏ "–ù–µ—Ç")
@dp.callback_query(F.data.in_(["q1_yes", "q1_no"]))
async def process_q1(callback: types.CallbackQuery, state: FSMContext):
    answer = callback.data  # "q1_yes" –∏–ª–∏ "q1_no"
    await state.update_data(q1=answer)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å 2 —Å –≤—ã–±–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏
    photo_path = "3.jpg"  # –ø—É—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ
    text = "<b>–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —É–¥–µ–ª—è–µ—Ç –∑–∞–∫—É–ø—â–∏–∫ —Ä–∞–±–æ—Ç–µ –≤ –¥–µ–Ω—å?</b>"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–¥–æ 1 —á–∞—Å–∞ –≤ –¥–µ–Ω—å", callback_data="q2_1")],
        [InlineKeyboardButton(text="–¥–æ 3 - 5 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å", callback_data="q2_3_5")],
        [InlineKeyboardButton(text="–¥–æ 6 - 10 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å", callback_data="q2_6_10")]
    ])
    photo = FSInputFile(photo_path)
    await bot.send_photo(chat_id=callback.message.chat.id,
                         photo=photo,
                         caption=text,
                         parse_mode=ParseMode.HTML,
                         reply_markup=keyboard)
    await callback.answer()
    await state.set_state(Quiz.q2)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å 2
@dp.callback_query(F.data.in_(["q2_1", "q2_3_5", "q2_6_10"]))
async def process_q2(callback: types.CallbackQuery, state: FSMContext):
    answer = callback.data
    await state.update_data(q2=answer)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å 3 —Å –≤—ã–±–æ—Ä–æ–º –±—é–¥–∂–µ—Ç–∞ (–≤–∞—Ä–∏–∞–Ω—Ç—ã 1)
    photo_path = "4.jpg"
    text = """<b>–ö —Ç–µ–±–µ –ø–æ—Å—Ç—É–ø–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –ø–æ–¥ –∫–ª—é—á –ø–æ —Ç–µ–º–∞—Ç–∏–∫–µ –∂–µ–Ω—Å–∫–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, –Ω–æ –∫–ª–∏–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞</b>

–¢–≤–æ—è –ó–∞–¥–∞—á–∞: 

–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ–≥ –≤—Ö–æ–¥–∞ –ø–æ –±—é–¥–∂–µ—Ç—É –≤ —Ç–µ–º–∞—Ç–∏–∫–µ ¬´–ñ–µ–Ω—Å–∫–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏¬ª"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–æ—Ç 250–∫ –¥–æ 350.000–∫–†", callback_data="q3_option1")],
        [InlineKeyboardButton(text="–æ—Ç 500.000‚ÇΩ", callback_data="q3_option2")],
        [InlineKeyboardButton(text="–æ—Ç 1.000.000‚ÇΩ", callback_data="q3_option3")]
    ])
    photo = FSInputFile(photo_path)
    await bot.send_photo(chat_id=callback.message.chat.id,
                         photo=photo,
                         caption=text,
                         parse_mode=ParseMode.HTML,
                         reply_markup=keyboard)
    await callback.answer()
    await state.set_state(Quiz.q3)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å 3
@dp.callback_query(F.data.in_(["q3_option1", "q3_option2", "q3_option3"]))
async def process_q3(callback: types.CallbackQuery, state: FSMContext):
    answer = callback.data
    await state.update_data(q3=answer)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å 4 —Å –≤—ã–±–æ—Ä–æ–º –±—é–¥–∂–µ—Ç–∞ (–≤–∞—Ä–∏–∞–Ω—Ç—ã 2)
    photo_path = "5.jpg"
    text = """–ú–Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª –∑–∞–ø—Ä–æ—Å –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:

‚Äî –ù—É–∂–µ–Ω –ø–∞—Å—Å–∏–≤–Ω—ã–π –±–∏–∑–Ω–µ—Å –ø–æ–¥ –∫–ª—é—á. –°–∫–∞–∑–∞–ª–∏ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å. –ï—Å—Ç—å —Å—É–º–º–∞ (–•) ‚Äî —Å—É–º–º—ã –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã —á—Ç–æ-–Ω–∏–±—É–¥—å —Å–æ—Ç–≤–æ—Ä–∏—Ç—å? 

–° —ç—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —è –∑–∞—Ä–∞–±–æ—Ç–∞–ª - 300.000—Ä 

–í–æ–ø—Ä–æ—Å: 

–°–∫–æ–ª—å–∫–æ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞ –≤—ã–¥–µ–ª–∏–ª –∫–ª–∏–µ–Ω—Ç –Ω–∞ –∑–∞–∫—É–ø —Ä–µ–∫–ª–∞–º—ã?"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="500.000‚ÇΩ", callback_data="q4_option1")],
        [InlineKeyboardButton(text="3.000.000‚ÇΩ", callback_data="q4_option2")],
        [InlineKeyboardButton(text="1.000.000‚ÇΩ", callback_data="q4_option3")]
    ])
    photo = FSInputFile(photo_path)
    await bot.send_photo(chat_id=callback.message.chat.id,
                         photo=photo,
                         caption=text,
                         parse_mode=ParseMode.HTML,
                         reply_markup=keyboard)
    await callback.answer()
    await state.set_state(Quiz.q4)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å 4 —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º "–ù–µ–ø–ª–æ—Ö–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º?"
@dp.callback_query(F.data.in_(["q4_option1", "q4_option2", "q4_option3"]))
async def process_q4(callback: types.CallbackQuery, state: FSMContext):
    answer = callback.data
    await state.update_data(q4=answer)

    chat_id = callback.message.chat.id
    text = "–ù–µ–ø–ª–æ—Ö–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º?"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–î–∞, –î–∞–µ–µ–µ–º –ì–∞–∑—É!!!", callback_data="continue_after_q4")]
    ])
    await bot.send_message(chat_id=chat_id, text=text, reply_markup=keyboard)
    await callback.answer()

# –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–∞, –î–∞–µ–µ–µ–º –ì–∞–∑—É!!!"
@dp.callback_query(F.data == "continue_after_q4")
async def process_continue_after_q4(callback: types.CallbackQuery, state: FSMContext):
    chat_id = callback.message.chat.id
    photo_path = "6.jpg"  # –ø—É—Ç—å –∫ –Ω—É–∂–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–µ
    caption = """<b>–ü—Ä–µ–∂–¥–µ, —á–µ–º –º—ã –ø–µ—Ä–µ–π–¥–µ–º –∫ –º–∞—Ç–µ—Ä–∏–∞–ª—É ‚Äî –æ—Ç–≤–µ—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –ª–∏–Ω–µ–π–∫—É –≤–æ–ø—Ä–æ—Å–æ–≤</b> üëá

–ß—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å—Ç–∞—Ä—Ç–∞–Ω—É—Ç—å –≤ –∑–∞–∫—É–ø–∞—Ö, —è –¥–æ–ª–∂–µ–Ω —Ç–æ–Ω–∫–æ –ø–æ–Ω—è—Ç—å, —Å —á–µ–º —Ç—ã –ø—Ä–∏—à—ë–ª.

–í—Å–µ –ª–∏—á–Ω–æ, –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥. –í—Å—ë –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ.

–ü–æ—ç—Ç–æ–º—É: –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã —Ç—ã –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–∏–∂–µüëá

1. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? –°–∫–æ–ª—å–∫–æ –ª–µ—Ç? –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –∂–∏–≤—ë—à—å?
2. –ß–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è? –†–∞–±–æ—Ç–∞–µ—à—å/—É—á–∏—à—å—Å—è, —Ä–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ
3. –°–∫–æ–ª—å–∫–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—à—å —Å–µ–π—á–∞—Å? –°–∫–æ–ª—å–∫–æ —Ö–æ—Ç–µ–ª(–∞) –±—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å?
4. –ë—ã–ª –ª–∏ –æ–ø—ã—Ç –≤ —Ç–æ–º, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–π –±–∏–∑–Ω–µ—Å?

<b>–û—Ç–≤–µ—Ç—ã –ø—Ä–∏—Å—ã–ª–∞–π –º–Ω–µ –≤ –ª–∏—á–∫—É: @Arti_Guru</b>"""
    photo = FSInputFile(photo_path)
    await bot.send_photo(chat_id=chat_id,
                         photo=photo,
                         caption=caption,
                         parse_mode=ParseMode.HTML)
    await callback.answer()
    # –ó–∞–ø—É—Å–∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    asyncio.create_task(send_delayed_message(chat_id))
    await state.set_state(Quiz.waiting_for_final)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
async def send_delayed_message(chat_id: int):
    await asyncio.sleep(2)  # –æ–∂–∏–¥–∞–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥—ã (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —É–≤–µ–ª–∏—á–∏—Ç—å –≤—Ä–µ–º—è)
    photo_path = "7.jpg"
    text = "–û—Ç–≤–µ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã? –î–∞–≤–∞–π —Å–≤–µ—Ä–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã!"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–î–∞, –¥–∞–≤–∞–π!", callback_data="final_step")]
    ])
    photo = FSInputFile(photo_path)
    await bot.send_photo(chat_id=chat_id,
                         photo=photo,
                         caption=text,
                         parse_mode=ParseMode.HTML,
                         reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–∞, –¥–∞–≤–∞–π!"
@dp.callback_query(F.data == "final_step")
async def process_final_step(callback: types.CallbackQuery, state: FSMContext):
    text = """<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã üëá</b>

1) –ü—Ä–∞–≤–¥–∞ –ª–∏, —á—Ç–æ –Ω—É–∂–µ–Ω –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –∑–∞–∫—É–ø—â–∏–∫–æ–º? 
   –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚Äî –Ω–µ—Ç. 
   ‚Äî –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –≤—ã–π—Ç–∏ –Ω–∞ –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –º–∞—Å—à—Ç–∞–±–∞ ‚Äî –º–æ–∂–Ω–æ –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π.

<b>2) –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —É–¥–µ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–µ –∑–∞–∫—É–ø—â–∏–∫?</b>
   –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚Äî –¥–æ 3 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å. –ù–æ –µ—Å–ª–∏ –∑–∞–∫—É–ø—â–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–æ–µ–∫—Ç–∞–º–∏, —Ä–∞–±–æ—Ç–∞ –º–æ–∂–µ—Ç –¥–ª–∏—Ç—å—Å—è 24/7. 

<b>3) –ö–∞–∫–æ–π –ø–æ—Ä–æ–≥ –≤—Ö–æ–¥–∞ –≤ —Ç–µ–º–∞—Ç–∏–∫—É –∂–µ–Ω—Å–∫–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏?</b>
   –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚Äî –æ—Ç 500.000‚ÇΩ. 

<b>4) –ö–∞–∫–∞—è —Ü–µ–Ω–æ–≤–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –∑–∞ —É—Å–ª—É–≥—É ¬´–ö–∞–Ω–∞–ª –ø–æ–¥ –∫–ª—é—á¬ª?</b>
   –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç ‚Äî —Ä—ã–Ω–æ—á–Ω–∞—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ ‚Äî 30%. –ó–∞ —Ä–∞–±–æ—Ç—É –≤ —Ä–∞–∑–º–µ—Ä–µ 300.000‚ÇΩ —è —Ä–µ–∞–ª–∏–∑—É—é –±—é–¥–∂–µ—Ç –≤ —Ä–∞–∑–º–µ—Ä–µ 1.000.000‚ÇΩ.
"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–•–æ—á—É —É–∑–Ω–∞—Ç—å —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –≤ —Ç–µ–ª–µ–≥–µ!", callback_data="show_result")]
    ])
    await bot.send_message(chat_id=callback.message.chat.id,
                           text=text,
                           parse_mode=ParseMode.HTML,
                           reply_markup=keyboard)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –∏ —Ä–∞—Å—á—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
@dp.callback_query(F.data == "show_result")
async def process_show_result(callback: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    score = 0
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å 1 ‚Äî "–ù–µ—Ç")
    correct_answers = {
        'q1': 'q1_no',
        'q2': 'q2_3_5',
        'q3': 'q3_option2',
        'q4': 'q4_option3'
    }
    results_text = "<b>–í–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:</b>\n"

    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏
    for idx, key in enumerate(['q1', 'q2', 'q3', 'q4'], start=1):
        user_answer = data.get(key, "–Ω–µ –æ—Ç–≤–µ—Ç–∏–ª")
        if user_answer == correct_answers[key]:
            results_text += f"–í–æ–ø—Ä–æ—Å {idx}: –ü—Ä–∞–≤–∏–ª—å–Ω–æ ‚úÖ\n"
            score += 1
        else:
            results_text += f"–í–æ–ø—Ä–æ—Å {idx}: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚ùå\n"
    results_text += f"\n–û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {score} –∏–∑ 4\n"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ç–æ
    if score >= 4:
        level = "–ü–†–û–§–ò"
        result_photo = "full.jpg"   # –§–æ—Ç–æ –¥–ª—è –ü–†–û–§–ò
        result_file = "–ü—Ä–æ—Ñ–∏.pdf"     # –§–∞–π–ª –¥–ª—è –ü–†–û–§–ò
        photo_description = (
            "<b>–ü—Ä–∏–≤–µ—Ç, –ø—Ä–æ—Ñ–∏</b> üëã\n\n"
            "–£—Å—Ç–∞–ª —Ç–æ–ø—Ç–∞—Ç—å—Å—è –Ω–∞ –º–µ—Å—Ç–µ? –ù–∞—á–∏–Ω–∞–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üëá\n\n"
            "‚Äî –ß—Ç–æ –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏–ª\n"
            "‚Äî –ü—Ä–∏–º–µ—Ä—ã —Ö–æ–ª–æ–¥–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫\n"
            "‚Äî –ü—Ä–∏–º–µ—Ä –æ–±—â–µ–Ω–∏—è –ø–æ –∑–≤–æ–Ω–∫—É\n"
            "‚Äî –ö–∞–∫ –¥–æ–Ω–µ—Å—Ç–∏ —Ü–µ–Ω–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö —É—Å–ª—É–≥\n"
            "‚Äî –ö–∞–∫–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏ –¥–æ–ª–∂–µ–Ω –æ–±–ª–∞–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏\n\n"
            "<b>–¢–æ–≥–¥–∞ –ø—Ä–∏—Å—Ç—É–ø–∞–π –∫ –∏–∑—É—á–µ–Ω–∏—éüëá</b>"
        )
    elif score in [2, 3]:
        level = "–ü–†–û–î–í–ò–ù–£–¢–´–ô"
        result_photo = "middle.jpg"      # –§–æ—Ç–æ –¥–ª—è –ü–†–û–î–í–ò–ù–£–¢–´–•
        result_file = "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π.pdf"    # –§–∞–π–ª –¥–ª—è –ü–†–û–î–í–ò–ù–£–¢–´–•
        photo_description = (
            "<b>–ü—Ä–∏–≤–µ—Ç, –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π!</b> üëã\n\n"
            "–Ø –¥—É–º–∞—é, —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω–æ –æ–±—ä—è—Å–Ω—è—Ç—å, —á—Ç–æ —Ç–∞–∫–æ–µ CPM –∏ –ø—Ä–æ—á–∏–µ –±–∞–∑–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã. "
            "–ü—Ä–∏—Å–∞–∂–∏–≤–∞–π—Å—è –ø–æ—É–¥–æ–±–Ω–µ–µ –∏ –¥–æ–ø–æ–ª–Ω—è–π —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è, —á—Ç–æ–±—ã –¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–µ —à–∞–≥–∏ –∫ –æ—â—É—Ç–∏–º–æ–º—É –¥–æ—Ö–æ–¥—Éüëá\n\n"
            "–ö–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ä–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º?\n"
            "‚Äî –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞\n"
            "‚Äî –ó–∞–∫—É–ø–∫–∞ —Ä–µ–∫–ª–∞–º—ã –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–∏–ø–æ—Ç–µ–∑\n"
            "‚Äî –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–∞–º–ø–∞–Ω–∏–π –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ\n"
            "‚Äî –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç—á—ë—Ç–æ–≤ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏\n"
            "‚Äî –ö–∞–∫ —É–¥–µ—à–µ–≤–ª—è—Ç—å —Ü–µ–Ω—É –∑–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞\n"
            "‚Äî –ö–∞–∫–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏ –¥–æ–ª–∂–µ–Ω –æ–±–ª–∞–¥–∞—Ç—å –∑–∞–∫—É–ø—â–∏–∫?\n\n"
            "<b>–ù–∞—á–∏–Ω–∞–π —á–∏—Ç–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –Ω–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–∏–º–µ–Ω—è—Ç—å –µ—ë –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ</b> üëá"
        )
    else:
        level = "–ù–û–í–ò–ß–û–ö"
        result_photo = "new.jpg"      # –§–æ—Ç–æ –¥–ª—è –ù–û–í–ò–ß–ö–ê
        result_file = "–ù–æ–≤–∏—á–æ–∫.pdf"   # –§–∞–π–ª –¥–ª—è –ù–û–í–ò–ß–ö–ê
        photo_description = (
            "<b>–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –≤ Telegram: –í–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤</b>\n\n"
            "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ. –ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, "
            "–∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–µ —à–∞–≥–∏ –∫ –∑–∞—Ä–∞–±–æ—Ç–∫—É –≤ –¢–ì. –£—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è –ø–æ—É–¥–æ–±–Ω–µ–µ ‚Äî –º—ã –Ω–∞—á–∏–Ω–∞–µ–º!\n\n"
            "<b>–ß—Ç–æ —Ç–∞–∫–æ–µ Telegram?</b>\n"
            "Telegram ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä, –∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å, –≥–¥–µ –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –∞—É–¥–∏—Ç–æ—Ä–∏—é.\n\n"
            "–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è –≤ Telegram –±—ã–≤–∞–µ—Ç —Ä–∞–∑–Ω–æ–π:\n"
            "- –ü—Ä–æ–¥–∞–∂–∞ —Ä–µ–∫–ª–∞–º—ã\n"
            "- –ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥\n"
            "- –î—Ä—É–≥–∏–µ —Å—Ö–µ–º—ã –∑–∞—Ä–∞–±–æ—Ç–∫–∞\n\n"
            "–ü–æ–ª—É—á–∞–π —á–µ–∫-–ª–∏—Å—Ç –∏ –∏–∑—É—á–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–¥—Ä–æ–±–Ω–µ–µ."
        )

    results_text += f"\n–í–∞—à —É—Ä–æ–≤–µ–Ω—å: {level}"

    # 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    await bot.send_message(chat_id=callback.message.chat.id,
                           text=results_text,
                           parse_mode=ParseMode.HTML)

    # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —É—Ä–æ–≤–Ω—è (caption —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π)
    photo = FSInputFile(result_photo)
    await bot.send_photo(chat_id=callback.message.chat.id,
                         photo=photo,
                         caption=photo_description,
                         parse_mode=ParseMode.HTML)

    # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
    document = FSInputFile(result_file)
    await bot.send_document(chat_id=callback.message.chat.id,
                            document=document)

    # 4. –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –µ–≥–æ –æ—Ç–≤–µ—Ç–∞—Ö –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å —á–∏—Ç–∞–µ–º—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
    admin_message = f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n" \
                    f"–ò–º—è: {callback.from_user.full_name}\n" \
                    f"Username: @{callback.from_user.username}\n" \
                    f"ID: {callback.from_user.id}\n\n" \
                    f"–û—Ç–≤–µ—Ç—ã:\n"
    for question in ['q1', 'q2', 'q3', 'q4']:
        raw_answer = data.get(question)
        readable = ANSWER_TEXTS.get(question, {}).get(raw_answer, "–Ω–µ –æ—Ç–≤–µ—Ç–∏–ª")
        admin_message += f"–í–æ–ø—Ä–æ—Å {question[-1]}: {readable}\n"
    admin_message += f"–ë–∞–ª–ª—ã: {score} –∏–∑ 4\n" \
                     f"–£—Ä–æ–≤–µ–Ω—å: {level}"
    await bot.send_message(chat_id=ADMIN_ID, text=admin_message)

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥ ‚Äî –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ FSM
    await state.clear()
    await callback.answer()

if __name__ == "__main__":
    asyncio.run(dp.start_polling(bot))
